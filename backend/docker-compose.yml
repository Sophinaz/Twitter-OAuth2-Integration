services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ccdevtech_backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      SERVER_HOST: 0.0.0.0
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: ccdevtech_postgres
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DATABASE_USER} -d $${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migrate:
    image: migrate/migrate
    container_name: ccdevtech_migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path=/migrations", "-database=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?sslmode=disable", "up"]
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

    